# ui.py 修改后import customtkinter as ctkfrom app.UI_sneaker_page import SneakerMainPagefrom app.UI_usage_page import UsagePagefrom app.UI_rating_page import RatingPagefrom app.UI_setting_page import SettingsPageclass SneakerApp(ctk.CTk):    def __init__(self):        super().__init__()        # 获取屏幕尺寸        screen_width = self.winfo_screenwidth()        screen_height = self.winfo_screenheight()        # 窗口默认宽高（建议占屏幕的 70%）        window_width = int(screen_width * 0.7)        window_height = int(screen_height * 0.7)        # 最小窗口大小（根据设计需要，避免页面布局错乱）        min_width = 1200        min_height = 800        # 计算居中位置        x = (screen_width - window_width) // 2        y = (screen_height - window_height) // 2        # 设置窗口大小和位置        self.geometry(f"{window_width}x{window_height}+{x}+{y}")        # 设置最小大小        self.minsize(min_width, min_height)        ctk.set_appearance_mode("dark")  # 设置为深色模式        ctk.set_default_color_theme("blue")  # 使用蓝色主题        self.title("Sneaker Manager v0.42")        #self.geometry("1200x800")        self.grid_rowconfigure(0, weight=1)        self.grid_columnconfigure(1, weight=1)        # 设置深色背景        self.configure(fg_color="#1e1e2d")        # 侧边栏 - 深色卡片风格        self.sidebar = ctk.CTkFrame(self, width=200, corner_radius=0,                                    fg_color="#1a1a27")        self.sidebar.grid(row=0, column=0, sticky="ns")        self.sidebar.grid_propagate(False)        # 内容区域 - 使用深色背景        self.content_frame = ctk.CTkFrame(self, fg_color="#1e1e2d")        self.content_frame.grid(row=0, column=1, sticky="nsew")        self.current_page = None        # 标题 - 现代风格        self.title_label = ctk.CTkLabel(            self.sidebar,            text="Sneaker Manager",            font=("微软雅黑", 20, "bold"),            text_color="#f0f0f0"        )        self.title_label.pack(pady=(30, 20), padx=20, anchor="w")        # 按钮样式 - 现代化扁平设计        button_style = {            "anchor": "w",            "corner_radius": 8,            "fg_color": "transparent",            "hover_color": "#2d2d44",            "text_color": ("gray10", "gray90"),            "font": ("微软雅黑", 14),            "height": 40,            "border_spacing": 10        }        self.sneaker_button = ctk.CTkButton(            self.sidebar,            text="球鞋主数据",            command=self.show_sneaker_page,            **button_style        )        self.sneaker_button.pack(fill="x", padx=10, pady=(0, 5))        self.usage_button = ctk.CTkButton(            self.sidebar,            text="球鞋使用",            command=self.show_usage_page,            **button_style        )        self.usage_button.pack(fill="x", padx=10, pady=5)        self.rating_button = ctk.CTkButton(            self.sidebar,            text="评分库",            command=self.show_rating_page,            **button_style        )        self.rating_button.pack(fill="x", padx=10, pady=5)        self.setting_button = ctk.CTkButton(            self.sidebar,            text="设置",            command=self.show_setting_page,            **button_style        )        self.setting_button.pack(fill="x", padx=10, pady=(5, 20))        # 底部填充        ctk.CTkLabel(self.sidebar, text="").pack(side="bottom", fill="both", expand=True)        self.show_sneaker_page()    def clear_content(self):        if self.current_page:            self.current_page.destroy()    def show_sneaker_page(self):        self.clear_content()        self.sneaker_page = SneakerMainPage(self.content_frame, sneaker_service=None)        self.sneaker_page.pack(fill="both", expand=True)        self.current_page = self.sneaker_page    def show_usage_page(self):        self.clear_content()        self.current_page = UsagePage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)    def show_rating_page(self):        self.clear_content()        self.current_page = RatingPage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)    def show_setting_page(self):        self.clear_content()        self.current_page = SettingsPage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)