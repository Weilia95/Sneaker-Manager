# ui.pyimport customtkinter as ctkfrom app.UI_sneaker_page import SneakerMainPagefrom app.UI_usage_page import UsagePagefrom app.UI_rating_page import RatingPagefrom app.UI_setting_page import SettingsPageclass SneakerApp(ctk.CTk):    def __init__(self):        super().__init__()        # —— 窗口基础设置 —— #        # 获取屏幕尺寸        screen_width = self.winfo_screenwidth()        screen_height = self.winfo_screenheight()        # 默认窗口为屏幕的70%        window_width = int(screen_width * 0.7)        window_height = int(screen_height * 0.7)        # 最小窗口尺寸        min_width = 1200        min_height = 800        # 居中计算        x = (screen_width - window_width) // 2        y = (screen_height - window_height) // 2        self.geometry(f"{window_width}x{window_height}+{x}+{y}")        self.minsize(min_width, min_height)        # 主题        ctk.set_appearance_mode("dark")        ctk.set_default_color_theme("blue")        self.title("Sneaker Manager v0.42")        self.grid_rowconfigure(0, weight=1)        self.grid_columnconfigure(1, weight=1)        self.configure(fg_color="#1e1e2d")        # —— 样式定义 —— #        # 导航按钮默认风格        self.nav_button_style = {            "anchor": "w",            "corner_radius": 8,            "fg_color": "transparent",            "hover_color": "#2d2d44",            "text_color": ("gray10", "gray90"),            "font": ("微软雅黑", 14),            "height": 40,            "border_spacing": 10        }        # 导航按钮选中时高亮风格        self.nav_button_selected = {            "fg_color": "#FFDF4E",        # 卡其色            "hover_color": "#D9BE42",     # 深一点的高亮            "text_color": "black"        }        # —— 布局 —— #        # 侧边栏        self.sidebar = ctk.CTkFrame(self, width=200, corner_radius=0, fg_color="#1a1a27")        self.sidebar.grid(row=0, column=0, sticky="ns")        self.sidebar.grid_propagate(False)        # 内容区        self.content_frame = ctk.CTkFrame(self, fg_color="#1e1e2d")        self.content_frame.grid(row=0, column=1, sticky="nsew")        # 侧边栏标题        self.title_label = ctk.CTkLabel(            self.sidebar,            text="Sneaker Manager",            font=("微软雅黑", 20, "bold"),            text_color="#f0f0f0"        )        self.title_label.pack(pady=(30, 20), padx=20, anchor="w")        # 导航按钮        self.sneaker_button = ctk.CTkButton(            self.sidebar,            text="球鞋主数据",            command=self.show_sneaker_page,            **self.nav_button_style        )        self.sneaker_button.pack(fill="x", padx=10, pady=(0, 5))        self.usage_button = ctk.CTkButton(            self.sidebar,            text="球鞋使用",            command=self.show_usage_page,            **self.nav_button_style        )        self.usage_button.pack(fill="x", padx=10, pady=5)        self.rating_button = ctk.CTkButton(            self.sidebar,            text="评分库",            command=self.show_rating_page,            **self.nav_button_style        )        self.rating_button.pack(fill="x", padx=10, pady=5)        self.setting_button = ctk.CTkButton(            self.sidebar,            text="设置",            command=self.show_setting_page,            **self.nav_button_style        )        self.setting_button.pack(fill="x", padx=10, pady=(5, 20))        # 底部填充        ctk.CTkLabel(self.sidebar, text="").pack(side="bottom", fill="both", expand=True)        # 记录当前页引用        self.current_page = None        # 初始显示「球鞋主数据」        self.show_sneaker_page()    def clear_content(self):        """清除内容区旧页面"""        if self.current_page:            self.current_page.destroy()    def _update_sidebar_selected(self, selected_btn):        """更新侧边栏按钮高亮状态"""        for btn in (            self.sneaker_button,            self.usage_button,            self.rating_button,            self.setting_button        ):            if btn == selected_btn:                btn.configure(                    fg_color=self.nav_button_selected["fg_color"],                    hover_color=self.nav_button_selected["hover_color"],                    text_color=self.nav_button_selected["text_color"]                )            else:                btn.configure(                    fg_color=self.nav_button_style["fg_color"],                    hover_color=self.nav_button_style["hover_color"],                    text_color=self.nav_button_style["text_color"]                )    def show_sneaker_page(self):        """显示球鞋主数据页"""        self.clear_content()        self.current_page = SneakerMainPage(self.content_frame, sneaker_service=None)        self.current_page.pack(fill="both", expand=True)        self._update_sidebar_selected(self.sneaker_button)    def show_usage_page(self):        """显示球鞋使用记录页"""        self.clear_content()        self.current_page = UsagePage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)        self._update_sidebar_selected(self.usage_button)    def show_rating_page(self):        """显示评分库页"""        self.clear_content()        self.current_page = RatingPage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)        self._update_sidebar_selected(self.rating_button)    def show_setting_page(self):        """显示设置页"""        self.clear_content()        self.current_page = SettingsPage(master=self.content_frame)        self.current_page.pack(fill="both", expand=True)        self._update_sidebar_selected(self.setting_button)