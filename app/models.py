# sneaker_manager/app/models.pyfrom sqlalchemy import Column, Integer, String, Float, ForeignKey, Date, DateTimefrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import relationshipfrom sqlalchemy.ext.hybrid import hybrid_propertyfrom pypinyin import lazy_pinyinfrom datetime import datetimeBase = declarative_base()class Sneaker(Base):    __tablename__ = 'sneakers'    id = Column(Integer, primary_key=True)    name = Column(String(100), nullable=False)    brand = Column(String(50))    series = Column(String(50))    purchase_date = Column(String(10))    purchase_price = Column(Float)    image_path = Column(String(200))    size = Column(Float)    color = Column(String(100), default='')    status = Column(String,default="使用中") #球鞋使用状态，在新增时默认为使用中    # 新增字段存储拼音首字母    name_pinyin = Column(String(200), index=True)  # 添加索引提升搜索性能    ratings = relationship("Rating", back_populates="sneaker", order_by="Rating.created_at", cascade="all, delete-orphan")    def __init__(self, **kwargs: object) -> object:        super().__init__(**kwargs)        # 自动生成拼音首字母        self.name_pinyin = self._generate_pinyin()    def _generate_pinyin(self):        """生成名称拼音首字母"""        try:            return ''.join([s[0] for s in lazy_pinyin(self.name)])        except:            return ""class UsageRecord(Base):    __tablename__ = 'usage_records'    id = Column(Integer, primary_key=True)    sneaker_id = Column(Integer, ForeignKey("sneakers.id"), nullable=False)    date = Column(Date)  # 建议直接用 Date 类型，便于查询    location = Column(String(100), nullable=True)    activity = Column(String(50), nullable=False)    duration = Column(Integer, nullable=True)  # 单位：分钟    notes = Column(String(2000), nullable=True)  # 感受记录，最多2000字    sneaker = relationship("Sneaker", backref="usage_records")class Rating(Base):    __tablename__ = 'rating_records'    id = Column(Integer,primary_key=True)    sneaker_id = Column(Integer,ForeignKey("sneakers.id"),nullable=False)    cushion = Column(Integer) #缓震    traction = Column(Integer) #抓地    torsion = Column(Integer) #抗扭    durability = Column(Integer) #耐磨    created_at = Column(DateTime, default=datetime.utcnow)    sneaker = relationship("Sneaker", back_populates="ratings")