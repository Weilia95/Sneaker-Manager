# sneaker_manager/app/models.pyfrom sqlalchemy import Column, Integer, String, Floatfrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.ext.hybrid import hybrid_propertyfrom sqlalchemy import Column, Stringfrom pypinyin import lazy_pinyinBase = declarative_base()class Sneaker(Base):    __tablename__ = 'sneakers'    id = Column(Integer, primary_key=True)    name = Column(String(100), nullable=False)    brand = Column(String(50))    series = Column(String(50))    purchase_date = Column(String(10))    purchase_price = Column(Float)    image_path = Column(String(200))    size = Column(Float)    color = Column(String, default='') #新增颜色字段，逗号分隔颜色    # 新增字段存储拼音首字母    name_pinyin = Column(String(200), index=True)  # 添加索引提升搜索性能    def __init__(self, **kwargs: object) -> object:        super().__init__(**kwargs)        # 自动生成拼音首字母        self.name_pinyin = self._generate_pinyin()    def _generate_pinyin(self):        """生成名称拼音首字母"""        try:            return ''.join([s[0] for s in lazy_pinyin(self.name)])        except:            return ""class UsageRecord(Base):    __tablename__ = 'usage_records'    id = Column(Integer, primary_key=True)    sneaker_id = Column(Integer, nullable=False)    date = Column(String(10))    location = Column(String(100))    activity = Column(String(50))